/*
Зад.18

Да се напише програма, която пресмята корен квадратен от цяло число n със зададена точност ε като използва итеративния метод на Нютон:

1. Прави се първоначално предположение за корена `y`
2. Формулата y' = average(y, n/y) подобрява предположението, т.е. y' е по-близко до коренът на числото от y
3. Подобряваме предположението, докато не стане достатъчно добро

Пример: Искаме да сметнем корен квадратен от 7, с точност 0.1 (10-2)

Правим първоначалното предположение, че коренът е 1
Подобряваме предположението си като пресмятаме средното аритметично на 1 и 7/1, което е 4
Вече предположението ни е 4 и отново го подобряваме като пресмятаме средното аритметично на 4 и 7/4, което е 2.875
Отново подобряваме предположението и получаваме (2.875 + 7/2.875) / 2 = 2.65489130435
2.654891304352 - 7 = 0.04844783791, което е по-малко от исканата точност 0.1 => приключваме пресмятането с резултат 2.65489130435

*/

#include <iostream>
#include <iomanip>

double average(double number,double guesses)
{
	double result = (guesses + (number / guesses)) / 2;
	return result;
}

double root(double num, double epsilon)
{
	double quess = 1;
	quess = average(num, quess);
	while ((pow(quess,2)-num) > epsilon)
	{
		quess = average(num, quess);
	}

	return quess;
}

int main()
{
	double number;
	double epsilon;
	std::cin >> number >> epsilon;


	std::cout <<std::fixed<<std::setprecision(15)<< root(number, epsilon) << "\n";


	return 0;
}
